{"version":3,"sources":["components/Addcustomer.js","components/Customerlist.js","components/Trainings.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["AddCustomer","props","React","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","setCustomer","handleClose","handleInputChange","event","target","name","value","Button","style","margin","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","autoFocus","onChange","e","label","fullWidth","DialogActions","saveCustomer","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","Customerlist","setCustomers","useEffect","fetchData","fetch","then","response","json","data","content","method","headers","body","JSON","stringify","res","catch","err","console","error","columns","title","field","icons","actions","icon","DeleteOutline","tooltip","rowData","link","links","href","window","confirm","SportsHandballIcon","editable","onRowUpdate","newData","oldData","Promise","resolve","reject","setTimeout","index","indexOf","updateCustomer","log","Trainingslist","trainings","setTrainings","updateTraining","useStyles","makeStyles","root","flexGrow","maxWidth","IconLabelTabs","classes","setValue","Paper","square","className","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","component","Link","to","App","exact","path","Trainings","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1c3c7201.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AddCustomer(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [customer, setCustomer] = React.useState({\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    streetaddress: \"\",\r\n    postcode: \"\",\r\n    city: \"\",\r\n    email: \"\",\r\n    phone: \"\"\r\n  });\r\n\r\n  //Open model\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  //Close the model\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleInputChange = event => {\r\n    setCustomer({ ...customer, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const addCustomer = () => {\r\n    props.saveCustomer(customer);\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        style={{ margin: 20 }}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n      >\r\n        Add customer\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Car</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            name=\"firstname\"\r\n            value={customer.firstname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"firstname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"lastname\"\r\n            value={customer.lastname}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"lastname\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"streetaddress\"\r\n            value={customer.streetaddress}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"streetaddress\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"postcode\"\r\n            value={customer.postcode}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"postcode\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"city\"\r\n            value={customer.city}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"city\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"email\"\r\n            value={customer.email}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"email\"\r\n            fullWidth\r\n          />\r\n\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"phone\"\r\n            value={customer.phone}\r\n            onChange={e => handleInputChange(e)}\r\n            label=\"phone\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={addCustomer} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Addcustomer from \"./Addcustomer\";\r\nimport SportsHandballIcon from \"@material-ui/icons/SportsHandball\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nexport default function Customerlist() {\r\n  const [customer, setCustomers] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  //GET\r\n  const fetchData = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\")\r\n      .then(response => response.json())\r\n      .then(data => setCustomers(data.content));\r\n  };\r\n\r\n  //DELETE DELETE THE CUSTOMER\r\n  const deleteCustomer = link => {\r\n    if (window.confirm(\"Are you sure you want to delete?\"))\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err));\r\n  };\r\n\r\n  //POST ADD NEW CUSTOMER\r\n  const saveCustomer = customer => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/customers\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  //Put edit customer\r\n  const updateCustomer = (customer, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(customer)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const columns = [\r\n    { title: \"firstname\", field: \"firstname\" },\r\n    { title: \"lastname\", field: \"lastname\" },\r\n    { title: 'streetaddress\"', field: \"streetaddress\" },\r\n    { title: \"postcode\", field: \"postcode\" },\r\n    { title: \"city\", field: \"city\" },\r\n    { title: \"email\", field: \"email\" },\r\n    { title: \"phone\", field: \"phone\" },\r\n    {}\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <Addcustomer saveCustomer={saveCustomer} />\r\n\r\n      <MaterialTable\r\n        data={customer}\r\n        columns={columns}\r\n        icons={tableIcons}\r\n        title=\"All customers\"\r\n        actions={[\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete User\",\r\n            onClick: (event, rowData) => deleteCustomer(rowData.links[0].href)\r\n          },\r\n          rowData => ({\r\n            icon: SportsHandballIcon,\r\n            tooltip: \"Add training\"\r\n            // onClick:(event,rowData)=>saveCustomer={saveCustomer}\r\n          })\r\n        ]}\r\n        //MUOKKAUSTOIMINNALLISUUS\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                {\r\n                  const data = customer;\r\n                  const index = data.indexOf(oldData);\r\n                  data[index] = newData;\r\n                  updateCustomer(newData, newData.links[1].href);\r\n                  console.log(\"newData: \", index);\r\n                }\r\n              }, 600);\r\n            })\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// installing materialUI library\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { forwardRef } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBox from \"@material-ui/icons/AddBox\";\r\nimport ArrowDownward from \"@material-ui/icons/ArrowDownward\";\r\nimport Check from \"@material-ui/icons/Check\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport Clear from \"@material-ui/icons/Clear\";\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport FilterList from \"@material-ui/icons/FilterList\";\r\nimport FirstPage from \"@material-ui/icons/FirstPage\";\r\nimport LastPage from \"@material-ui/icons/LastPage\";\r\nimport Remove from \"@material-ui/icons/Remove\";\r\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\r\nimport Addcustomer from \"./Addcustomer\";\r\nimport moment from \"moment\";\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => (\r\n    <ChevronRight {...props} ref={ref} />\r\n  )),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => (\r\n    <ChevronLeft {...props} ref={ref} />\r\n  )),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n};\r\n\r\nexport default function Trainingslist() {\r\n  const [trainings, setTrainings] = useState([]);\r\n\r\n  useEffect(() => fetchData(), []);\r\n\r\n  //GET\r\n  const fetchData = () => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\")\r\n      .then(response => response.json())\r\n      .then(data => setTrainings(data.content));\r\n    console.log(\"test\");\r\n  };\r\n\r\n  //DELETE DELETE THE Training\r\n  const deleteTraining = link => {\r\n    if (window.confirm(\"Are you sure you want to delete?\"))\r\n      fetch(link, { method: \"DELETE\" })\r\n        .then(res => fetchData())\r\n        .catch(err => console.error(err));\r\n  };\r\n\r\n  //POST ADD NEW CUSTOMER\r\n  const saveTraining = trainings => {\r\n    fetch(\"https://customerrest.herokuapp.com/api/trainings\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(trainings)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  //Put edit customer\r\n  const updateTraining = (trainings, link) => {\r\n    fetch(link, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(trainings)\r\n    })\r\n      .then(res => fetchData())\r\n      .catch(err => console.error(err));\r\n  };\r\n\r\n  const columns = [\r\n    { title: \"activity\", field: \"activity\" },\r\n    { title: \"duration\", field: \"duration\" },\r\n    { title: \"date\", field: \"date\" },\r\n    {}\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <MaterialTable\r\n        data={trainings}\r\n        columns={columns}\r\n        icons={tableIcons}\r\n        title=\"Trainings\"\r\n        actions={[\r\n          {\r\n            icon: DeleteOutline,\r\n            tooltip: \"Delete Training\",\r\n            onClick: (event, rowData) => deleteTraining(rowData.links[1].href)\r\n          }\r\n        ]}\r\n        //MUOKKAUSTOIMINNALLISUUS\r\n        editable={{\r\n          onRowUpdate: (newData, oldData) =>\r\n            new Promise((resolve, reject) => {\r\n              setTimeout(() => {\r\n                {\r\n                  const data = trainings;\r\n                  const index = data.indexOf(oldData);\r\n                  data[index] = newData;\r\n                  updateTraining(newData, newData.links[1].href);\r\n                  console.log(\"newData: \", index);\r\n                }\r\n              }, 600);\r\n            })\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// installing materialUI library\r\n","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: 5000\r\n  }\r\n});\r\n\r\nexport default function IconLabelTabs() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={value}\r\n        onChange={handleChange}\r\n        variant=\"fullWidth\"\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        aria-label=\"icon label tabs example\"\r\n      >\r\n        <Tab icon={<AssignmentIndIcon />} component={Link} to=\"/Customer\" label=\"Customers\" />\r\n        <Tab icon={<AccessibilityIcon />} component={Link} to=\"/Trainings\" label=\"Trainings\" />\r\n        <Tab icon={<CalendarTodayIcon />} component={Link} to=\"/Calendar\"  label=\"Calendar\" />\r\n      </Tabs>\r\n    </Paper>\r\n    \r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Customerlist from \"./components/Customerlist\";\r\nimport Trainings from \"./components/Trainings\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/Customer\" component={Customerlist} />\r\n          <Route exact path=\"/Trainings\" component={Trainings} />\r\n          <Route exact path=\"/Calendar\" component={() => <div><h3>in progress</h3></div>} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}